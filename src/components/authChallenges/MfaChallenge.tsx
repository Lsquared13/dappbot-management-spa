import React, { FC, useState, useEffect } from 'react';
import DappbotAPI from '@eximchain/dappbot-api-client';
import User, { Challenges } from '@eximchain/dappbot-types/spec/user';
import { isSuccessResponse } from '@eximchain/dappbot-types/spec/responses';
import { MfaLoginChallenge as MfaLogin } from '@eximchain/dappbot-types/spec/methods/auth';
import { Button } from '../ui';
import { StringField } from '../fields';
import Alert from 'react-s-alert';

import { useResource } from 'react-request-hook';

interface MfaChallengeProps {
  user: User.AuthData
  challenge: Challenges.Data
  setUser: (user:User.AuthData)=>void
  setErr: (err:string)=>void
  setChallenge: (challenge:Challenges.Data)=>void
  API: DappbotAPI
}

export const MfaChallenge:FC<MfaChallengeProps> = ({user, challenge, setUser, setChallenge, API})=>{

  const [mfaCode, setMfaCode] = useState('');

  const [mfaLoginResponse, requestMfaLogin] = useResource(API.auth.mfaLoginChallenge.resource);

  const makeMfaLoginRequest = async () => {
    const mfaLoginDetails:MfaLogin.Args = {
      'username': user.User.Username,
      'mfaLoginCode': mfaCode,
      'session': challenge.Session
    }
    requestMfaLogin(mfaLoginDetails)
  }
  const { error, data, isLoading } = mfaLoginResponse;
  useEffect(function handleMfaLoginResponse(){
    if(error){
      switch (error.code) {
        default: {
          let msg = "Error logging in with MFA. Check that your MFA device's clock is correct and that the code was input correctly.";
          Alert.error(msg, { timeout: 4000 });
        }
      }
    }
    if(isSuccessResponse(data)){
      if (User.isAuthData(data.data)) setUser(data.data);
      setChallenge(Challenges.newData())
    }
  }, [error, data])

  return (
    <>
      <StringField name='mfa' 
        value={mfaCode}  
        displayName="Two-factor Auth Code"
        help="This code is generated by an app like Duo or Google Authenticator."
        onChange={setMfaCode} />
      <Button disabled={isLoading} block onClick={makeMfaLoginRequest}>Submit</Button>
    </>
  )
}

export default MfaChallenge;